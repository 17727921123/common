<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsm.common.dao.BaseDao">
    <insert id="save" parameterType="com.lsm.common.db.DBCommonPO" useGeneratedKeys="true" keyProperty="pk.keyValue">
        INSERT INTO ${tableName} (
        creater_time,
        is_delete
        <if test="saveColumns != null and saveColumns.colums != null and saveColumns.colums.size()>0">
            <foreach collection="saveColumns.colums" item="item" index="index" open="," separator=",">
                ${item}
            </foreach>
        </if>
        ) VALUES (
        NOW(),
        0
        <if test="saveColumns != null and saveColumns.values != null and saveColumns.values.size()>0">
            <foreach collection="saveColumns.values" item="item" index="index" open="," separator=",">
                #{item}
            </foreach>
        </if>
        )
    </insert>
    <update id="remove" parameterType="com.lsm.common.db.DBCommonPO">
        UPDATE ${tableName} SET
        updater_time = NOW(),
        is_delete = 1
        <if test="updateColumns != null and updateColumns.size()>0">
            <foreach collection="updateColumns" item="item" index="index" open="," separator=",">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        WHERE is_delete = 0
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </update>
    <delete id="delete" parameterType="com.lsm.common.db.DBCommonPO">
        DELETE FROM ${tableName}
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </delete>
    <update id="update" parameterType="com.lsm.common.db.DBCommonPO">
        UPDATE ${tableName} SET
        updater_time = NOW()
        <if test="updateColumns != null and updateColumns.size()>0">
            <foreach collection="updateColumns" item="item" index="index" open="," separator=",">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        WHERE is_delete = 0
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </update>
    <select id="getCount" parameterType="com.lsm.common.db.DBCommonPO" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM ${tableName}
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </select>
    <select id="get" parameterType="com.lsm.common.db.DBCommonPO" resultType="java.util.HashMap">
        <if test="selectColumns != null and selectColumns.size()>0">
            SELECT
            <foreach collection="selectColumns" item="item" index="index" separator=",">
                ${item}
            </foreach>
            FROM ${tableName}
        </if>
        <if test="selectColumns == null">
            SELECT * FROM ${tableName}
        </if>
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </select>
    <select id="list" parameterType="com.lsm.common.db.DBCommonPO" resultType="java.util.HashMap">
        <if test="selectColumns != null and selectColumns.size()>0">
            SELECT
            <foreach collection="selectColumns" item="item" index="index" separator=",">
                ${item}
            </foreach>
            FROM ${tableName}
        </if>
        <if test="selectColumns == null">
            SELECT * FROM ${tableName}
        </if>
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
        <include refid="orderBy"></include>
    </select>
    <sql id="where">
        <if test="where != null and where.wherePOS != null and where.wherePOS.size()>0">
            <foreach collection="where.wherePOS" item="item">
                ${item.relation}
                <choose>
                    <when test="item.expression == 'BETWEEN' or item.expression == 'NOT BETWEEN'">
                        ${item.field} ${item.expression} #{item.frontValue} AND #{item.afterValue}
                    </when>
                    <when test="item.expression == 'IS NULL' or item.expression == 'IS NOT NULL'">
                        ${item.field} ${item.expression}
                    </when>
                    <otherwise>
                        ${item.field} ${item.expression} #{item.frontValue}
                    </otherwise>
                </choose>
            </foreach>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="where != null and where.orderFields != null and where.orderFields.size()>0 and where.type != null">
            ORDER BY
            <foreach collection="where.orderFields" item="item" separator=",">
                ${item}
            </foreach>
            ${where.type}
        </if>
    </sql>
</mapper>