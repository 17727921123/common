<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsm.common.dao.BaseDao">
    <insert id="saveBatch" parameterType="com.lsm.common.db.DBInputData">
        INSERT INTO ${tableName} (
        creater_id,
        creater_time,
        is_delete
        <if test="colums != null and colums.size()>0">
            <foreach collection="colums" item="item" index="index" open="," separator=",">
                ${item}
            </foreach>
        </if>
        ) VALUES
        <if test="dbInputDataInfoList != null and dbInputDataInfoList.size() > 0">
            <foreach collection="dbInputDataInfoList" item="dbInputDataInfo" index="index" separator=",">
                <if test="dbInputDataInfo.values != null and dbInputDataInfo.values.size() > 0">
                    (
                    #{createrId},
                    NOW(),
                    0
                    <foreach collection="dbInputDataInfo.values" item="item" index="index" open="," separator=","
                             close=")">
                        #{item}
                    </foreach>
                </if>
            </foreach>
        </if>
    </insert>
    <update id="removeBatch" parameterType="com.lsm.common.db.DBInputData">
        UPDATE ${tableName} SET
        updater_time = NOW(),
        is_delete = 1
        <if test="updaterId != null">
            ,updater_id = #{updaterId}
        </if>
        WHERE is_delete = 0
        <if test="pk.keyValues != null and pk.keyValues.size() > 0">
            AND ${pk.keyId} IN
            <foreach collection="pk.keyValues" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <include refid="where"></include>
    </update>
    <delete id="deleteBatch" parameterType="com.lsm.common.db.DBInputData">
        DELETE FROM ${tableName}
        WHERE 1 = 1
        <if test="pk != null and pk.keyValues != null and pk.keyValues.size() > 0">
            AND ${pk.keyId} IN
            <foreach collection="pk.keyValues" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <include refid="where"></include>
    </delete>
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="dbInputDataInfoList" item="dbInputDataInfo" index="index" separator=";">
            update ${dbInputDataInfo.tableName}
            <if test="dbInputDataInfo.updaterId != null">
                SET updater_id = #{dbInputDataInfo.updaterId},
                updater_time = NOW(),
            </if>
            <foreach collection="dbInputDataInfo.updateColumns" item="item" separator=",">
                ${item.column} = #{item.value}
            </foreach>
            WHERE 1 = 1
            <if test="dbInputDataInfo.pk != null and dbInputDataInfo.pk.keyValue != null">
                AND ${dbInputDataInfo.pk.keyId} = #{dbInputDataInfo.pk.keyValue}
            </if>
            <include refid="where"></include>
        </foreach>
    </update>
    <select id="getCount" parameterType="com.lsm.common.db.DBInputData" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM ${tableName}
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </select>
    <select id="get" parameterType="com.lsm.common.db.DBInputData" resultType="java.util.HashMap">
        <if test="selectColumns != null and selectColumns.size()>0">
            SELECT
            <foreach collection="selectColumns" item="item" index="index" separator=",">
                ${item}
            </foreach>
            FROM ${tableName}
        </if>
        <if test="selectColumns == null">
            SELECT * FROM ${tableName}
        </if>
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
    </select>
    <select id="list" parameterType="com.lsm.common.db.DBInputData" resultType="java.util.HashMap">
        <if test="selectColumns != null and selectColumns.size()>0">
            SELECT
            <foreach collection="selectColumns" item="item" index="index" separator=",">
                ${item}
            </foreach>
            FROM ${tableName}
        </if>
        <if test="selectColumns == null">
            SELECT * FROM ${tableName}
        </if>
        WHERE 1 = 1
        <if test="pk != null">
            AND ${pk.keyId} = #{pk.keyValue}
        </if>
        <include refid="where"></include>
        <include refid="orderBy"></include>
    </select>
    <sql id="where">
        <if test="where != null and where.wherePOS != null and where.wherePOS.size()>0">
            <foreach collection="where.wherePOS" item="item">
                ${item.relation}
                <choose>
                    <when test="item.expression == 'BETWEEN' or item.expression == 'NOT BETWEEN'">
                        ${item.field} ${item.expression} #{item.frontValue} AND #{item.afterValue}
                    </when>
                    <when test="item.expression == 'IS NULL' or item.expression == 'IS NOT NULL'">
                        ${item.field} ${item.expression}
                    </when>
                    <otherwise>
                        ${item.field} ${item.expression} #{item.frontValue}
                    </otherwise>
                </choose>
            </foreach>
        </if>
    </sql>
    <sql id="orderBy">
        <if test="where != null and where.orderFields != null and where.orderFields.size()>0 and where.type != null">
            ORDER BY
            <foreach collection="where.orderFields" item="item" separator=",">
                ${item}
            </foreach>
            ${where.type}
        </if>
    </sql>
</mapper>